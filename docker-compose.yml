version: '3'

services:

  postgres_db:
    image: postgres:14
    expose:
      - 5432
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - FASTAPI_DB_USER=bellias
      - FASTAPI_DB_PASS=pass123
      - FASTAPI_DB_NAME=reference_letters_data
      - KEYCLOAK_DB_USER=testkeycloakuser
      - KEYCLOAK_DB_PASS=testkeycloakpassword
      - KEYCLOAK_DB_NAME=testkeycloakdb
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      timeout: 30s
      interval: 30s
      retries: 3
    volumes:
      - 'dj_postgres_data:/var/lib/postgresql/data/'
      - './ref_letters/assets/init_db:/docker-entrypoint-initdb.d/'
    restart:
      always

  keycloak_auth:
    image: jboss/keycloak:16.1.0
    volumes:
      - ./realm-export.json:/opt/jboss/keycloak/imports/realm-export.json
    command: 
      - "-b 0.0.0.0 -Dkeycloak.profile.feature.upload_scripts=enabled -Dkeycloak.import=/opt/jboss/keycloak/imports/realm-export.json"
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres_db
      DB_DATABASE: testkeycloakdb
      DB_USER: testkeycloakuser
      DB_SCHEMA: public
      DB_PASSWORD: testkeycloakpassword
      KEYCLOAK_USER: keycloakuser
      KEYCLOAK_PASSWORD: keycloakpassword
      PROXY_ADDRESS_FORWARDING: "true"
      KEYCLOAK_LOGLEVEL: DEBUG
    ports:
      - '8085:8080'
    depends_on:
      - postgres_db
    restart:
      always

  fastapi:
    build:
      context: .
      dockerfile: fastapi.nonroot.Dockerfile
    command: uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    volumes:
      - ./ref_letters:/usr/data/app
    env_file:
      - ref_letters/.env
    depends_on:
      - postgres_db
      # - keycloak_auth

volumes:
  dj_postgres_data:
